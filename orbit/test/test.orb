module Orb::Types::Intrinsics {
    type Unit
    type Int
}

module Single with Orb::Types::Intrinsics {
    type constructor Box<T>(value T)
    trait A(x Int)
    type B(x Int) : A

    extension Box where T : A {
        (self Self) a () (A) = self.value
    }

    (A) main () () {
        box = Box(B(1))
        tr = box.a()
    }
}