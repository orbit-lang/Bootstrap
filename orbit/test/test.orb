module Orb::Types::Intrinsics {
    type Unit
    type Int
}

module Single with Orb::Types::Intrinsics {
    type constructor Box<T>(value T)
    trait A
    type B

    extension Box where T = B {
        (self Self) b () (B) = self.value
    }

    (A) main () () {
        box = Box(B())

        tr = box.b()
    }
}