module M with Orb::Types::Intrinsics {
    type constructor B<T>(x T)

    type Z = B<Int>

    (Z) add (a Z, b Z) (Z) {
        return Z(a.x + b.x)
    }

    (B) foo () (B<Int>) {
        return Z.add(Z(1), Z(2))
    }
}