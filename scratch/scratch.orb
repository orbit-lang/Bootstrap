module Orb::Core::Types {
    type Unit
}

module Orb::Core::Numbers {
    type Int
}

module Orb::Core::Booleans {
    type Bool {
        constructor True
        constructor False
    }

    (self Bool) not () (Bool) = select self {
        case true = false
        case else = true
    }
}

module M with Orb::* {
    context BoxCtx [V] {
        alias Box = { value V }

        (self Box) unwrap () (V) = self.value
    }

    (Bool) main () () {
        f = ::unwrap
        b = Box(1)
        i = f(b)
        typeOf i
    }
}