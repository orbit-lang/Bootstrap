module Orb::Core::Types {
    type Unit
}

module Orb::Core::Booleans {
    type Bool {
        constructor True
        constructor False
    }
}

module Orb::Core::Numbers with Orb::Core::Errors {
    type Int
    type Real

    projection Int : Error
}

module Orb::Core::Errors {
    trait Error
}

module Orb::More::Attributes::Intrinsics {
    attribute CheckKinds = (A, B) => A ^ B
    attribute CheckTypes = (A, B) => A = B
    attribute CheckTrait = (A, B) => A : B
#        with .Conforms(A, B)
}

#module Orb::More::FX {
#    effect Conforms [A, B] {
#        .RegisterConformance!()
#    }
#}

module Main with Orb::* {
    fun (Any) main () () {

    }
}