module Orb::Core::Numbers {
    type Int
}

module Orb::Core::Strings {
    type String
}

module Orb::Core::Booleans {
    type Bool {
        constructor True
        constructor False
    }

    (self Bool) and (other Bool) (Bool) = select self {
        case true = other
        case false = false
    }
}

module Orb::Core::Types {
    type Unit
}

module M with Orb::Core::* {
    type Foo(x Int)

    (Int) fizzBuzz (n Int) (Int) = select n % 15 {
        case 0 = 3
        case else = select n % 5 {
            case 0 = 2
            case else = select n % 3 {
                case 0 = 1
                case else = 0
            }
        }
    }
}