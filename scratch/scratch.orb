module Orb::Core::Types {
    type Unit
}

module Orb::Core::Booleans {
    type Bool {
        constructor True
        constructor False
    }
}

module Orb::Core::Numbers {
    type Int
    type Real
}

module Orb::Core::Errors with Orb::Core::* {
    trait Error
}

module Main with Orb::* {
    alias Foo = { x ${1} }
    alias AtLeast = (J) => (I J) => I

    alias Test = .AtLeast(Foo)

    fun (Unit) main () () {
        f = ${Foo(${1})}
        i = mirror .Test(${Foo(${1})})
        typeOf i
    }
}