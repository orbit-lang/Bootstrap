module Orb::Core::Types {
    type Unit
}

module Orb::Core::Numbers {
    type Int
    type Real
}

module TypeFunctions with Orb::* {
#    alias ID = (T) => T
    alias Pair = (A, B) => { first A, second B }
    alias First = (A, B) => A
    alias Second = (A, B) => B
    alias Pair2 = (A, B) => .Pair(A, B)

    fun (Unit) main () () {
        r = Real()
        p = .Pair(Int, Real)(1, r)
    }
}