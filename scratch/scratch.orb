module Orb::Core::Numbers {
    type Int
}

module Orb::Core::Booleans {
    type Bool {
        constructor True
        constructor False
    }
}

module Orb::Core::Types {
    type Unit
    trait Any
}

module M with Orb::Core::* {
    context ValueCtx [V, v V] {
        (V) foo () (V) = v
    }

    (Int) main () () within ValueCtx [Bool, true] {
        f = Bool.foo()
        typeOf f
    }
}