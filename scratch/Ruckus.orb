module Orb::Ruckus::Types with Orb::Core {
    trait RawArgumentProvider {
        (self Self) provideArguments () (List<String>)
    }

    context ArgumentCtx [ResultType] {
        trait ArgumentTransformer {
            (Self) transform (rawValue String) (ResultType)
        }

        type Argument(usage String, value ResultType)
    }

    context OptionCtx [ResultType] {
        trait OptionTransformer {
            (Self) transform (rawValue String) (ResultType)
        }

        type Option(shortKey String, longKey String, usage String)
    }

    type StringArgumentTransformer

    projection StringArgumentTransformer : ArgumentTransformer within ArgumentCtx [String]
        with transform by $0
}